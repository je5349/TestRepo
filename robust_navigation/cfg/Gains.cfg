#!/usr/bin/env python
PACKAGE = "robust_navigation"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("maximum_linear_velocity",  			double_t,	0,  "Max speed Geobot can go",       1, 0, 1.1 )
gen.add("maximum_angular_velocity", 			double_t,	0,  "Max spin speed Geobot will do", 1, 0, 1.1 )
gen.add("error_tolerance2goal",     			double_t,	0,  "Fraction of current segment where next segment is considered",	0.4, 0, 1)
gen.add("no_of_segments_ahead",					int_t,		0,  "Number of future segments considered for speed reduction",		5,   1,	10)
gen.add("error_gain",							double_t,	0,  "K_k Path offset gain term", 			1, 0, 2)
gen.add("cte_gain",								double_t,	0,  "cte Cross track error term", 			1, 0, 2)
gen.add("heading_gain",							double_t,	0,  "K_e Geobot heading error gain term", 	1, 0, 2)
gen.add("velocity_constraint",					double_t,	0,	"Max speed Geobot can go", 				1, 0, 1.1)
gen.add("obstacle_edge2robotcenter",			double_t,	0,	"Half of gap_width threshold", 			0.5, 0, 1)
gen.add("trajectory_projection",				double_t,	0,	"trajectory_projection", 				0.3, 0, 1)
gen.add("cross_track_error_deadband",			double_t,	0,	"cross track error deadband", 			0.02, 0, 1)
gen.add("side_distance_avoidance_threshold",	double_t,	0,	"side distance avoidance threshold",	0.8, 0, 1)
gen.add("front_distance_avoidance_threshold",	double_t,	0,	"front distance avoidance threshold",	1.2, 0, 2)
gen.add("side_avoidance_blindband",				double_t,	0,	"side avoidance blindband",				0.4, 0, 1)

exit(gen.generate(PACKAGE, "robust_navigation", "Gains"))



